###############################################################
## openssl.conf - generated by django-pki
###############################################################

HOME = $ENV::PKI_DIR
RANDFILE = $HOME/.rnd
S_A_N = "undefined"
C_D_P = "undefined"

###############################################################
## CA definitions
###############################################################

[ ca ]
default_ca               = ___DummyCA___

[ ___DummyCA___ ]
dir                      = $HOME/___DummyCA___
certs                    = $dir/certs
new_certs_dir            = $certs
database                 = $dir/index.txt
certificate              = $dir/___DummyCA___.cert.pem
private_key              = $dir/private/___DummyCA___.key.pem
serial                   = $dir/serial
crldir                   = $dir/crl
crlnumber                = $dir/crlnumber
crl                      = $crldir/___DummyCA___.crl.pem
RANDFILE                 = $dir/private/.rnd
x509_extensions          = v3_ca
copy_extensions          = copy
name_opt                 = ca_default
cert_opt                 = ca_default
default_md               = sha1
preserve                 = no
policy                   = policy_match


## Angelantoni S.p.A. Certification Authority
[ angelantoni-ca ]
dir                      = $HOME/angelantoni-ca
certs                    = $dir/certs
new_certs_dir            = $certs
database                 = $dir/index.txt
certificate              = $certs/angelantoni-ca.cert.pem
private_key              = $dir/private/angelantoni-ca.key.pem
serial                   = $dir/serial
crldir                   = $dir/crl
crlnumber                = $dir/crlnumber
crl                      = $crldir/angelantoni-ca.crl.pem
RANDFILE                 = $dir/private/.rnd
x509_extensions          = v3_root_or_intermediate_ca
copy_extensions          = copy
name_opt                 = ca_default
cert_opt                 = ca_default
default_md               = sha1
preserve                 = no
policy                   = policy_anything


###############################################################
## Policy definitions
###############################################################

[ policy_match ]
commonName                      = supplied
countryName                     = match
stateOrProvinceName             = match
localityName                    = match
organizationName                = match
organizationalUnitName          = optional
emailAddress                    = optional

[ policy_anything ]
commonName                      = supplied
countryName                     = supplied
stateOrProvinceName             = supplied
localityName                    = supplied
organizationName                = supplied
organizationalUnitName          = optional
emailAddress                    = optional

###############################################################
## Request defaults
###############################################################

[ req ]
default_bits                    = 1024
default_keyfile                 = privkey.pem
distinguished_name              = req_distinguished_name
attributes                      = req_attributes
string_mask                     = nombstr

[ req_distinguished_name ]
commonName                      = Common Name (eg, your name or your server's hostname)
commonName_max                  = 64
countryName                     = Country Name (2 letter code)
countryName_default             = DE
countryName_min                 = 2
countryName_max                 = 2
stateOrProvinceName             = State or Province Name (full name)
stateOrProvinceName_default     = Bavaria
localityName                    = Locality Name (eg, city)
localityName_default            = Munich
0.organizationName              = Organization Name (eg, company)
0.organizationName_default      = Bozo Inc. Clown Factory
organizationalUnitName          = Organizational Unit Name (eg, section)
organizationalUnitName_default  = BackEnd
subjectAltName                  = Alias Name (eg, for a system hosting several SSL services)
subjectAltName_max              = 64
emailAddress                    = Email Address
emailAddress_max                = 64

[ req_attributes ]

###############################################################
## x509 extensions
###############################################################


## Root or Intermediate CA which can contain sub CA&#39;s
[ v3_root_or_intermediate_ca ]
basicConstraints = critical,CA:TRUE
keyUsage = critical,keyCertSign,cRLSign
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid:always,issuer:always




## Edge CA the cannot contain CA&#39;s
[ v3_edge_ca ]
basicConstraints = critical,CA:TRUE,pathlen:0
keyUsage = critical,keyCertSign,cRLSign
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid:always,issuer:always




## A server edge certificate (non CA)
[ v3_edge_cert_server ]
basicConstraints = critical,CA:FALSE
keyUsage = critical,digitalSignature,nonRepudiation,keyEncipherment
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid:always,issuer:always
extendedKeyUsage = critical,serverAuth
subjectAltName = ${ENV::S_A_N}


## Client edge certificates (non CA)
[ v3_edge_cert_client ]
basicConstraints = critical,CA:FALSE
keyUsage = critical,digitalSignature,nonRepudiation,keyEncipherment
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid:always,issuer:always
extendedKeyUsage = critical,clientAuth
subjectAltName = ${ENV::S_A_N}


## Self-signed server certificates
[ v3_edge_self_signed_server ]
basicConstraints = critical,CA:TRUE,pathlen:0
keyUsage = critical,digitalSignature,nonRepudiation,keyEncipherment
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid:always,issuer:always
extendedKeyUsage = critical,serverAuth



